class Solution {
  public:
    void merge(vector<int>& arr, int l, int mid, int r) {
        vector<int> arr1(mid - l + 1);
        vector<int> arr2(r - mid);

        for (int i = 0; i < arr1.size(); i++) {
            arr1[i] = arr[l + i];
        }
        for (int i = 0; i < arr2.size(); i++) {
            arr2[i] = arr[mid + 1 + i];
        }

        int i = 0, j = 0, k = l;
        while (i < arr1.size() && j < arr2.size()) {
            if (arr1[i] < arr2[j])
                arr[k++] = arr1[i++];
            else
                arr[k++] = arr2[j++];
        }

        while (i < arr1.size()) {
            arr[k++] = arr1[i++];
        }
        while (j < arr2.size()) {
            arr[k++] = arr2[j++];
        }
    }

    void mergeSort(vector<int>& arr, int l, int r) {
        if (l >= r) return;
        int mid = (l + r) / 2;
        mergeSort(arr, l, mid);
        mergeSort(arr, mid + 1, r);
        merge(arr, l, mid, r);
    }
};
